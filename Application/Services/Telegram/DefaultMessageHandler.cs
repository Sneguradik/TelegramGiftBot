using Domain.Interfaces.Services.Telegram.TelegramUpdateHandlers;
using Microsoft.Extensions.Logging;
using Telegram.BotAPI;
using Telegram.BotAPI.AvailableMethods;
using Telegram.BotAPI.GettingUpdates;

namespace Application.Services.Telegram;

public class DefaultMessageHandler(ITelegramBotClient botClient, ILogger<DefaultMessageHandler> logger) 
    : IDefaultMessageHandler<Update>
{
    public async Task<bool> HandleUpdateAsync(Update update, CancellationToken cancellationToken = default)
    {
        var message = update.Message;
        if (message is null) 
            return false;

        string senderInfo;
        
        // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ –æ—Ç –∏–º–µ–Ω–∏ –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ –≥—Ä—É–ø–ø—ã
        if (message.SenderChat is not null)
        {
            senderInfo = $"üì¢ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–∞–Ω–∞–ª–∞/—á–∞—Ç–∞: <b>{message.SenderChat.Title}</b>\n" +
                         $"ID: <code>{message.SenderChat.Id}</code>";
        }
        else if (message.From is not null)
        {
            senderInfo = $"üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: <b>@{message.From.Username ?? "–±–µ–∑ –Ω–∏–∫–∞"}</b>\n" +
                         $"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <code>{message.From.Id}</code>";
        }
        else
        {
            senderInfo = "‚ùì –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω";
        }

        var reply = $"""
                     ‚ö° <b>–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!</b>

                     {senderInfo}

                     ‚ÑπÔ∏è –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥, –∏—Å–ø–æ–ª—å–∑—É–π <b>/help</b>.
                     """;

        await botClient.SendMessageAsync(
            chatId: message.Chat.Id,
            text: reply,
            parseMode: "HTML",
            cancellationToken: cancellationToken);

        logger.LogInformation(
            "Default message from chat {ChatId} processed. Sender info: {SenderInfo}", 
            message.Chat.Id, senderInfo);

        return true;
    }
}