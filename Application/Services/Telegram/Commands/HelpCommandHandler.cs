using Domain.Interfaces.Services.Telegram.TelegramUpdateHandlers;
using Telegram.BotAPI;
using Telegram.BotAPI.AvailableMethods;
using Telegram.BotAPI.GettingUpdates;

namespace Application.Services.Telegram.Commands;

public class HelpCommandHandler(ITelegramBotClient client) : ICommandMessageHandler<Update>
{

    
    public const string CommandName = "help";
    
    public async Task<bool> HandleUpdateAsync(Update update, CancellationToken cancellationToken = default)
    {
        if (update.Message is null) 
            return false;

        var commandReply = """
                           üëã *–ü—Ä–∏–≤–µ—Ç!*  
                           –í–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º:  

                           ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
                           üöÄ */start* ‚Äì —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è  
                           –°–æ–∑–¥–∞—ë—Ç –∫–æ—à–µ–ª—ë–∫ —Å–æ –∑–≤—ë–∑–¥–∞–º–∏ –∏ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –ø–æ–ª—É—á–∞—Ç–µ–ª—è (—Ç–≤–æ—è —É—á—ë—Ç–∫–∞).  

                           ‚ÑπÔ∏è */help* ‚Äì –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ  

                           üí∞ */myBalance* ‚Äì –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–∞–Ω—Å –≤—Å–µ—Ö –∫–æ—à–µ–ª—å–∫–æ–≤  

                           ‚≠ê */topUpBalance* `amount:<stars>` ‚Äì –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –≤ –∑–≤—ë–∑–¥–∞—Ö  

                           üéÅ */buyGift* `giftId:<id>` `quantity:<qty>` `recipientId:<id>` ‚Äì –∫—É–ø–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫  
                           üßæ */createGiftInvoice* `minPrice:<min>` `maxPrice:<max>` `quantity:<qty>` ‚Äì —Å–æ–∑–¥–∞—Ç—å –∏–Ω–≤–æ–π—Å –Ω–∞ –æ—Ç–∫—É–ø –ø–æ–¥–∞—Ä–∫–æ–≤  

                           üìú */listInvoices* ‚Äì –º–æ–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∏–Ω–≤–æ–π—Å—ã  
                           üéÅ */myGiftTransactions* ‚Äì –∏—Å—Ç–æ—Ä–∏—è –º–æ–∏—Ö –ø–æ–∫—É–ø–æ–∫  

                           üë• */myRecipients* ‚Äì —Å–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π –ø–æ–¥–∞—Ä–∫–æ–≤  
                           ‚ûï */addRecipient* `id:<recipientId>` `type:<User|Channel>` ‚Äì –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª—è  
                           """;
        await client.SendMessageAsync(
            chatId: update.Message.Chat.Id,
            text: commandReply,
            parseMode: "Markdown",
            cancellationToken: cancellationToken
        );

        return true;
    }
}