
services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: always
    ports:
      - "80:80"
      - "443:443"
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=johndoe@example.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    networks:
      - proxy

  postgres:
    image: postgres:latest
    container_name: telegram_bot_db
    restart: always
    environment:
      POSTGRES_USER: botuser
      POSTGRES_PASSWORD: botpassword
      POSTGRES_DB: telegrambotdb
    ports:
      - "5432:5432"
    volumes:
      - ./db_data:/var/lib/postgresql/data
    networks:
      - internal

  tg-bot-proxy:
    image: traefik/whoami
    container_name: tg-bot-proxy
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tgbot.rule=Host(`адрес`) && PathPrefix(`/tgBot`)"
      - "traefik.http.routers.tgbot.entrypoints=websecure"
      - "traefik.http.routers.tgbot.tls.certresolver=myresolver"
      - "traefik.http.services.tgbot.loadbalancer.server.scheme=http"
      - "traefik.http.services.tgbot.loadbalancer.server.url=http://host.docker.internal:8090"

volumes:
  db_data:

networks:
  proxy:
    external: false
  internal:
    external: false
